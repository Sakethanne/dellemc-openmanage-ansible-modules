- '        This module allows to generate certificate signing request,'
- '        import, and export certificates on iDRAC.'
- ''
- 'ADDED IN: version 5.5.0 of dellemc.openmanage'
- ''
- 'OPTIONS (= is mandatory):'
- ''
- '- ca_path'
- '        The Privacy Enhanced Mail (PEM) file that contains a CA'
- '        certificate to be used for the validation.'
- '        default: null'
- '        type: path'
- '        added in: version 5.0.0 of dellemc.openmanage'
- ''
- ''
- '- cert_params'
- '        Certificate parameters to generate signing request.'
- '        default: null'
- '        type: dict'
- ''
- '        SUBOPTIONS:'
- ''
- '        = common_name'
- '            The common name of the certificate.'
- '            type: str'
- ''
- '        = country_code'
- '            The country code of the country where the entity applying'
- '            for certification is located.'
- '            type: str'
- ''
- '        - email_address'
- '            The email associated with the CSR.'
- '            default: null'
- '            type: str'
- ''
- '        = locality_name'
- '            The city or other location where the entity applying for'
- '            certification is located.'
- '            type: str'
- ''
- '        = organization_name'
- '            The name associated with an organization.'
- '            type: str'
- ''
- '        = organization_unit'
- '            The name associated with an organizational unit. For'
- '            example department name.'
- '            type: str'
- ''
- '        = state_name'
- '            The state where the entity applying for certification is'
- '            located.'
- '            type: str'
- ''
- '        - subject_alt_name'
- '            The alternative domain names associated with the request.'
- '            default: []'
- '            elements: str'
- '            type: list'
- ''
- '- certificate_path'
- '        Absolute path of the certificate file if `command'' is'
- '        `import''.'
- '        Directory path with write permissions if `command'' is'
- '        `generate_csr'' or `export''.'
- '        default: null'
- '        type: path'
- ''
- '- certificate_type'
- '        Type of the iDRAC certificate.'
- '        `HTTPS'' The Dell self-signed SSL certificate.'
- '        `CA'' Certificate Authority(CA) signed SSL certificate.'
- '        `CUSTOMCERTIFICATE'' The custom PKCS12 certificate and private'
- '        key. Export of custom certificate is supported only on iDRAC'
- '        firmware version 7.00.00.00 and above.'
- '        `CSC'' The custom signing SSL certificate.'
- '        `CLIENT_TRUST_CERTIFICATE'' Client trust certificate.'
- '        choices: [HTTPS, CA, CUSTOMCERTIFICATE, CSC, CLIENT_TRUST_CERTIFICATE]'
- '        default: HTTPS'
- '        type: str'
- ''
- '- command'
- '        `generate_csr'', generate CSR. This requires `cert_params'' and'
- '        `certificate_path''. This is applicable only for `HTTPS'''
- '        `import'', import the certificate file. This requires'
- '        `certificate_path''.'
- '        `export'', export the certificate. This requires'
- '        `certificate_path''.'
- '        `reset'', reset the certificate to default settings. This is'
- '        applicable only for `HTTPS''.'
- '        choices: [import, export, generate_csr, reset]'
- '        default: generate_csr'
- '        type: str'
- ''
- = idrac_ip
- '        iDRAC IP Address.'
- '        type: str'
- ''
- '- idrac_password'
- '        iDRAC user password.'
- '        If the password is not provided, then the environment variable'
- '        `IDRAC_PASSWORD'' is used.'
- '        Example: export IDRAC_PASSWORD=password'
- '        aliases: [idrac_pwd]'
- '        default: null'
- '        type: str'
- ''
- '- idrac_port'
- '        iDRAC port.'
- '        default: 443'
- '        type: int'
- ''
- '- idrac_user'
- '        iDRAC username.'
- '        If the username is not provided, then the environment variable'
- '        `IDRAC_USERNAME'' is used.'
- '        Example: export IDRAC_USERNAME=username'
- '        default: null'
- '        type: str'
- ''
- '- passphrase'
- '        The passphrase string if the certificate to be imported is'
- '        passphrase protected.'
- '        default: null'
- '        type: str'
- ''
- '- reset'
- '        To reset the iDRAC after the certificate operation.'
- '        This is applicable when `command'' is `import'' or `reset''.'
- '        default: true'
- '        type: bool'
- ''
- '- resource_id'
- '        Redfish ID of the resource.'
- '        default: null'
- '        type: str'
- ''
- '- ssl_key'
- '        Absolute path of the private or SSL key file.'
- '        This is applicable only when `command'' is `import'' and'
- '        `certificate_type'' is `HTTPS''.'
- '        Uploading the SSL key to iDRAC is supported on firmware'
- '        version 6.00.02.00 and above.'
- '        default: null'
- '        type: path'
- '        added in: version 8.6.0 of dellemc.openmanage'
- ''
- ''
- '- timeout'
- '        The socket level timeout in seconds.'
- '        default: 30'
- '        type: int'
- '        added in: version 5.0.0 of dellemc.openmanage'
- ''
- ''
- '- validate_certs'
- '        If `false'', the SSL certificates will not be validated.'
- '        Configure `false'' only on personally controlled sites where'
- '        self-signed certificates are used.'
- '        Prior to collection version `5.0.0'', the `validate_certs'' is'
- '        `false'' by default.'
- '        default: true'
- '        type: bool'
- '        added in: version 5.0.0 of dellemc.openmanage'
- ''
- ''
- '- wait'
- '        Maximum wait time for iDRAC to start after the reset, in'
- '        seconds.'
- '        This is applicable when `command'' is `import'' or `reset'' and'
- '        `reset'' is `true''.'
- '        default: 300'
- '        type: int'
- ''
- '- x_auth_token'
- '        Authentication token.'
- '        If the x_auth_token is not provided, then the environment'
- '        variable `IDRAC_X_AUTH_TOKEN'' is used.'
- '        Example: export IDRAC_X_AUTH_TOKEN=x_auth_token'
- '        default: null'
- '        type: str'
- '        added in: version 9.3.0 of dellemc.openmanage'
- ''
- ''
- ''
- 'NOTES:'
- '      * The certificate operations are supported on iDRAC'
- '        firmware version 6.10.80.00 and above.'
- '      * Run this module from a system that has direct access to'
- '        Dell iDRAC.'
- '      * This module supports `check_mode''.'
- '      * This module supports IPv4 and IPv6 addresses.'
- ''
- ''
- 'REQUIREMENTS:  python >= 3.9.6'
- ''
- 'AUTHOR: Jagadeesh N V(@jagadeeshnv), Rajshekar P(@rajshekarp87), Kristian Lamb
    V(@kristian_lamb)'
- ''
- 'EXAMPLES:'
- ''
- '---'
- '- name: Generate HTTPS certificate signing request'
- '  dellemc.openmanage.idrac_certificates:'
- '    idrac_ip: "192.168.0.1"'
- '    idrac_user: "user_name"'
- '    idrac_password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    command: "generate_csr"'
- '    certificate_type: "HTTPS"'
- '    certificate_path: "/home/omam/mycerts"'
- '    cert_params:'
- '      common_name: "sample.domain.com"'
- '      organization_unit: "OrgUnit"'
- '      locality_name: "Bangalore"'
- '      state_name: "Karnataka"'
- '      country_code: "IN"'
- '      email_address: "admin@domain.com"'
- '      organization_name: "OrgName"'
- '      subject_alt_name:'
- '        - 192.198.2.1'
- ''
- '- name: Import a HTTPS certificate.'
- '  dellemc.openmanage.idrac_certificates:'
- '    idrac_ip: "192.168.0.1"'
- '    idrac_user: "user_name"'
- '    idrac_password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    command: "import"'
- '    certificate_type: "HTTPS"'
- '    certificate_path: "/path/to/cert.pem"'
- ''
- '- name: Import an HTTPS certificate along with its private key.'
- '  dellemc.openmanage.idrac_certificates:'
- '    idrac_ip: "192.168.0.1"'
- '    idrac_user: "user_name"'
- '    idrac_password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    command: "import"'
- '    certificate_type: "HTTPS"'
- '    certificate_path: "/path/to/cert.pem"'
- '    ssl_key: "/path/to/private_key.pem"'
- ''
- '- name: Export a HTTPS certificate.'
- '  dellemc.openmanage.idrac_certificates:'
- '    idrac_ip: "192.168.0.1"'
- '    idrac_user: "user_name"'
- '    idrac_password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    command: "export"'
- '    certificate_type: "HTTPS"'
- '    certificate_path: "/home/omam/mycert_dir"'
- ''
- '- name: Import a CSC certificate.'
- '  dellemc.openmanage.idrac_certificates:'
- '    idrac_ip: "192.168.0.1"'
- '    idrac_user: "user_name"'
- '    idrac_password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    command: "import"'
- '    certificate_type: "CSC"'
- '    certificate_path: "/path/to/cert.pem"'
- ''
- '- name: Import a custom certificate with a passphrase.'
- '  dellemc.openmanage.idrac_certificates:'
- '    idrac_ip: "192.168.0.1"'
- '    idrac_user: "user_name"'
- '    idrac_password: "user_password"'
- '    command: "import"'
- '    certificate_type: "CUSTOMCERTIFICATE"'
- '    certificate_path: "/path/to/idrac_cert.p12"'
- '    passphrase: "cert_passphrase"'
- '    reset: false'
- ''
- '- name: Export a Client trust certificate.'
- '  dellemc.openmanage.idrac_certificates:'
- '    idrac_ip: "192.168.0.1"'
- '    idrac_user: "user_name"'
- '    idrac_password: "user_password"'
- '    ca_path: "/path/to/ca_cert.pem"'
- '    command: "export"'
- '    certificate_type: "CLIENT_TRUST_CERTIFICATE"'
- '    certificate_path: "/home/omam/mycert_dir"'
- ''
- ''
- 'RETURN VALUES:'
- '- certificate_path'
- '        The csr or exported certificate file path'
- '        returned: when `command'' is `export'' or `generate_csr'''
- '        sample: /home/ansible/myfiles/cert.pem'
- '        type: str'
- ''
- '- error_info'
- '        Details of the HTTP Error.'
- '        returned: on HTTP error'
- '        sample:'
- '          error:'
- '            ''@Message.ExtendedInfo'':'
- '            - Message: Unable to process the request because an error occurred.'
- '              MessageArgs: []'
- '              MessageId: GEN1234'
- '              RelatedProperties: []'
- '              Resolution: Retry the operation. If the issue persists, contact your
    system'
- '                administrator.'
- '              Severity: Critical'
- '            code: Base.1.0.GeneralError'
- '            message: A general error has occurred. See ExtendedInfo for more information.'
- '        type: dict'
- ''
- '- msg'
- '        Status of the certificate configuration operation.'
- '        returned: always'
- '        sample: Successfully performed the ''generate_csr'' certificate operation.'
- '        type: str'
