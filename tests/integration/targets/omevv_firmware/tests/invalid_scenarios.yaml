# Dell OpenManage Ansible modules
# Copyright (C) 2024 Dell Inc. or its subsidiaries. All Rights Reserved.

# GNU General Public License v3.0+ (see COPYING or
# https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Test that we have an OMEVV host, OMEVV username and OMEVV password
  ansible.builtin.fail:
    msg: 'Please define the following variables: hostname,
     vcenter_username and vcenter_password.'
  when: 'hostname is not defined or vcenter_username is not defined or
         vcenter_password is not defined'

- block:
    - name: Fetch pre-requisite details
      ansible.builtin.include_tasks: ../_helper.yml
      vars:
        upgrade: true

    - name: Negative - unsupported argument
      dellemc.openmanage.omevv_firmware:
        unsupported_argument: unsupported
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_unsupported_argument
      ignore_errors: true

    - name: Verify task status - Negative - unsupported argument
      ansible.builtin.assert:
        that:
          - invalid_unsupported_argument.failed
          - not invalid_unsupported_argument.changed
          - 'invalid_unsupported_argument.msg == "Unsupported parameters for
              (dellemc.openmanage.omevv_firmware) module: unsupported_argument.
              Supported parameters include: ca_path, check_vSAN_health, date_time,
              delete_job_queue, drs_check, enter_maintenance_mode_options,
              enter_maintenance_mode_timeout, evacuate_VMs, exit_maintenance_mode,
              hostname, job_description, job_name, job_wait, job_wait_timeout,
              maintenance_mode_count_check, port, reboot_options, reset_idrac,
              run_now, targets, timeout, validate_certs, vcenter_password,
              vcenter_username, vcenter_uuid."'

    - name: Negative - unreachable host
      dellemc.openmanage.omevv_firmware:
        hostname: 999.999.999.999
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_unreachable
      ignore_unreachable: true

    - name: Verify task status - Negative - unreachable host
      ansible.builtin.assert:
        that:
          - invalid_unreachable.unreachable
          - not invalid_unreachable.changed
          - 'invalid_unreachable.msg == "<urlopen error Unable to resolve
             hostname or IP 999.999.999.999.>" or invalid_unreachable.msg ==
             "<urlopen error [Errno -2] Name or service not known>" or
             invalid_unreachable.msg == "The URL with IP 999.999.999.999
             and port 443 cannot be reached."'

    - name: Negative - invalid port
      dellemc.openmanage.omevv_firmware:
        port: -1
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_port
      ignore_errors: true

    - name: Verify task status - Negative - invalid port
      ansible.builtin.assert:
        that:
          - invalid_port.failed
          - not invalid_port.changed
          - 'invalid_port.msg == "Invalid port number. Enter the valid port
            number."'

    - name: Negative - invalid username
      dellemc.openmanage.omevv_firmware:
        vcenter_username: invalid
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_username
      ignore_errors: true

    - name: Verify task status - Negative - invalid username
      ansible.builtin.assert:
        that:
          - invalid_username.failed
          - not invalid_username.changed
          - 'invalid_username.error_info.message == "User is not authorized
             for the request. Please check if credentials are proper
             and account is not in locked state."'
          - 'invalid_username.error_info.errorCode == "10001"'

    - name: Negative - invalid password
      dellemc.openmanage.omevv_firmware:
        vcenter_password: invalid
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_password
      ignore_errors: true

    - name: Verify task status - Negative - invalid password
      ansible.builtin.assert:
        that:
          - invalid_password.failed
          - not invalid_password.changed
          - 'invalid_password.error_info.message == "User is not authorized
             for the request. Please check if credentials are proper
             and account is not in locked state."'
          - 'invalid_password.error_info.errorCode == "10001"'

    - name: Negative - invalid validate_certs
      dellemc.openmanage.omevv_firmware:
        validate_certs: invalid
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_validate_certs
      ignore_errors: true

    - ansible.builtin.set_fact:
        invalid_validate_certs_expected_msg: "argument 'validate_certs' is of
          type <class 'str'> and we were unable to convert to bool: The value
          'invalid' is not a valid boolean.  Valid booleans include: "

    - name: Verify task status - Negative - invalid validate_certs
      ansible.builtin.assert:
        that:
          - invalid_validate_certs.failed
          - not invalid_validate_certs.changed
          - invalid_validate_certs_expected_msg in invalid_validate_certs.msg

    - name: Negative - invalid ca_path path
      dellemc.openmanage.omevv_firmware:
        ca_path: /invalid/path
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_ca_path
      ignore_errors: true

    - name: Verify task status - Negative - invalid ca_path path
      ansible.builtin.assert:
        that:
          - invalid_ca_path.failed
          - not invalid_ca_path.changed
          - 'invalid_ca_path.msg == "[Errno 2] No such file or directory"'

    - name: Negative - invalid timeout type
      dellemc.openmanage.omevv_firmware:
        timeout: invalid
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_timeout_type
      ignore_errors: true

    - name: Verify task status - Negative - invalid timeout type
      ansible.builtin.assert:
        that:
          - invalid_timeout_type.failed
          - not invalid_timeout_type.changed
          - '"argument ''timeout'' is of
             type <class ''str''> and we were unable to convert to
             int:" in invalid_timeout_type.msg'

    - name: Negative - invalid timeout value
      dellemc.openmanage.omevv_firmware:
        timeout: -1
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_timeout_value
      ignore_errors: true

    - name: Verify task status - Negative - invalid timeout value
      ansible.builtin.assert:
        that:
          - invalid_timeout_value.failed
          - not invalid_timeout_value.changed
          - 'invalid_timeout_value.msg == "Invalid timeout value. Enter the
            valid positive integer."'

    - name: Negative - invalid vcenter uuid
      dellemc.openmanage.omevv_firmware:
        vcenter_uuid: invalid
        run_now: true
        targets:
          - host: "{{ host_ip_list[0] }}"
            firmware_components: "DCIM:INSTALLED#802__Diagnostics.Embedded.1:LC.Embedded.1"
      register: invalid_uuid
      ignore_errors: true

    - name: Verify task status - Negative - invalid vcenter uuid
      ansible.builtin.assert:
        that:
          - invalid_uuid.failed
          - not invalid_uuid.changed
          - 'invalid_uuid.msg == "vCenter with UUID invalid is not
            registered."'

  module_defaults:
    dellemc.openmanage.omevv_firmware:
      validate_certs: "{{ validate_certs }}"
      hostname: "{{ hostname }}"
      vcenter_username: "{{ vcenter_username }}"
      vcenter_password: "{{ vcenter_password }}"
